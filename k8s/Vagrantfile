# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'

#"centos/7"
#"generic/ubuntu2204"
VAGRANT_BOX         = "centos/7"
VAGRANT_BOX_VERSION = "4.2.6"
CPUS_MASTER_NODE    = 2
CPUS_WORKER_NODE    = 2
MEMORY_MASTER_NODE  = 3048
MEMORY_WORKER_NODE  = 2024
WORKER_NODES_COUNT  = 3

IP_NW="10.0.0."
IP_START=10

Vagrant.configure(2) do |config|

  config.vm.provision "shell", path: "bootstrap.sh"

  # Kubernetes Master Server
  config.vm.define "kmaster" do |kmaster|
    kmaster.vm.box = VAGRANT_BOX
    kmaster.vm.hostname = "kmaster.ddx.com"
    kmaster.vm.network "private_network", ip: "127.0.0.10"
    kmaster.vm.provider "virtualbox" do |v|
      v.name = "kmaster"
      v.memory = MEMORY_MASTER_NODE
      v.cpus = CPUS_MASTER_NODE
      # Prevent VirtualBox from interfering with host audio stack
      v.customize ["modifyvm", :id, "--audio", "none"]
    end
    kmaster.vm.provider :libvirt do |v|
      v.memory = MEMORY_MASTER_NODE
      v.nested = true
      v.cpus = CPUS_MASTER_NODE
    end
    kmaster.vm.provision "shell", path: "bootstrap_kmaster.sh"
#     kmaster.vm.provision "shell", path: "bootstrap_kmaster_flannel.sh"
  end

  NodeCount = 3

  # Kubernetes Worker Nodes
  (1..NodeCount).each do |i|
    config.vm.define "kworker#{i}" do |workernode|
      workernode.vm.box = "centos/7"
      workernode.vm.hostname = "kworker#{i}.ddx.com"
      workernode.vm.network "private_network", ip: "127.0.0.1#{i}"
      workernode.vm.provider "virtualbox" do |v|
        v.name = "kworker#{i}"
        v.memory = MEMORY_WORKER_NODE
        v.cpus = CPUS_WORKER_NODE
        # Prevent VirtualBox from interfering with host audio stack
        v.customize ["modifyvm", :id, "--audio", "none"]
      end
      workernode.vm.provider :libvirt do |v|
        v.memory = MEMORY_WORKER_NODE
        v.nested = true
        v.cpus = CPUS_WORKER_NODE
      end
      workernode.vm.provision "shell", path: "bootstrap_kworker.sh"
    end
  end

end
